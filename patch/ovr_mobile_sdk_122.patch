--- a/VrAppFramework/Projects/Android/build.gradle
+++ b/VrAppFramework/Projects/Android/build.gradle
@@ -67,7 +67,7 @@
 
 task( "cleanWorkAround" ) {
     description "Workaround for .externalNativeBuild not being deleted on clean"
-} << {
+} doLast {
     project.delete project.file( ".externalNativeBuild" )
 }
 
--- a/VrApp.gradle
+++ b/VrApp.gradle
@@ -95,7 +95,7 @@
     // FIXME: The Task.leftShift(Closure) method has been deprecated and is scheduled to be removed in Gradle 5.0. Please use Task.doLast(Action) instead.
     project.task( "cleanWorkAround" ) {
 	  description "Workaround for .externalNativeBuild not being deleted on clean"
-    } << {
+    } doLast {
 	  project.delete project.file( ".externalNativeBuild" )
     }
 
@@ -198,7 +198,7 @@
 
   project.afterEvaluate {
 
-      Task initDeviceList = project.task( "initDeviceList()" ) << {
+      Task initDeviceList = project.task( "initDeviceList()" ) doLast {
         project.ext.deviceMap = [ : ]
         if (project.hasProperty( "should_install" ) == true || project.hasProperty( "disable_sig_check" ) == false) {
             AndroidDebugBridge.initIfNeeded( false )
@@ -225,7 +225,7 @@
 
       project.task( "stopApk", dependsOn: initDeviceList ) {
           description "Stops app if currently running on device"
-      } << {
+      } doLast {
           project.deviceMap.each { deviceSerial, device ->
           stopApk( device, android.defaultConfig.applicationId )
         }
@@ -237,7 +237,7 @@
             project.deviceMap.size() != 0 &&
             project.hasProperty( "disable_sig_check" ) == false
           }
-      } << {
+      } doLast {
           def iterator = project.deviceMap.entrySet().iterator()
           while ( iterator.hasNext() ) { 
             def deviceElem = iterator.next()
@@ -264,7 +264,7 @@
             project.hasProperty( "disable_sig_check" ) == false
           }
           dependsOn project.OSigPreCheck
-        } << { variant.outputs.each { output ->
+        } doLast { variant.outputs.each { output ->
             def sigfiles = project.zipTree( output.outputFile ).matching{ include "assets/oculussig*" }
             def iterator = project.deviceMap.entrySet().iterator()
             while ( iterator.hasNext() ) { 
@@ -285,7 +285,7 @@
           dependsOn OSigPostCheck
           onlyIf { project.hasProperty( "should_install" ) }
           description "Installs and runs the APK file"
-        } << { variant.outputs.each { output ->
+        } doLast { variant.outputs.each { output ->
             if ( output.outputFile.exists() )
             {
               if ( project.deviceMap.size() == 0 ) {
@@ -317,7 +317,7 @@
     @TaskAction
     genDebugKeystore() {
         if ( !project.file("android.debug.keystore").exists() ) {
-            def pythonCmd = 'python'
+            def pythonCmd = 'python2'
             if (Os.isFamily(Os.FAMILY_WINDOWS)) {
                 pythonCmd = "${project.rootProject.projectDir}/bin/scripts/build/ovrbuild_keystore.py.bat"
                 project.exec {
@@ -356,7 +356,7 @@
                 buildType
             }
         } else {
-            def pythonCmd = 'python'
+            def pythonCmd = 'python2'
             project.exec {
                 commandLine pythonCmd,
                 "${project.rootProject.projectDir}/bin/scripts/build/ovrbuild_sdklibs.py",
@@ -396,4 +396,4 @@
     }
 }
 
-apply plugin: VrAppPlugin
\ No newline at end of file
+apply plugin: VrAppPlugin
